
                          2Задание по FRL N1

     Реализовать функцию:
      2(MINWAY <вершина 1> <вершина 2>)
     Семантика: На заданном неориентированном графе (граф задается
                сетью фреймов) находит кратчайший путь между двумя
                вершинами <вершина 1> <вершина 2>.
                Длина пути между двумя смежными вершинами равна 1.

     Проверить работу функции MINWAY на примере фрагмента схемы
     Московского метополитена.


     Пример:
       (MINWAY '(ПРОЛЕТАРСКАЯ КОЛХОЗНАЯ)) => (ПРОЛЕТАРСКАЯ  ТАГАНСКАЯ
                               ПЛОЩАДЬ-НОГИНА ТУРГЕНЕВСКАЯ КОЛХОЗНАЯ)


      DEFRAME
        (ПРОЛЕТАРСКАЯ
           (ВПЕРЕД ($VALUE (ТАГАНСКАЯ_РАДИАЛЬНАЯ)))
           (НАЗАД  ($VALUE (ВОЛГОГРАДСКИЙ-ПРОСПЕКТ)))
        )

      DEFRAME
        (ТАГАНСКАЯ_РАДИАЛЬНАЯ
           (ВПЕРЕД ($VALUE (ПЛОЩАДЬ-НОГИНА)))
           (НАЗАД  ($VALUE (ПРОЛЕТАРСКАЯ)))
           (ПЕРЕСАДКА ($VALUE (MAPKCИСТСКАЯ)(ТАГАНСКАЯ_КОЛЬЦЕВАЯ))
        )

.
                            - 2 -
                          2Задание по FRL N2

     Реализовать функцию:
      2(ДИАЛОГ)
     Семантика: Функция ДИАЛОГ позволяет в процессе диалога
                заполнять фреймы экземляры на основании фрейма
                прототипа

    Проверить работу  функции ДИАЛОГ на примере заполнения личной
карточки студента


     Пример:
       (ДИАЛОГ)
        2УКАЖИТЕ ВАШУ УЧЕБНУЮ ГРУППУ
       А-14-84
        2УКАЖИТЕ ВАШУ ФАМИЛИЮ
        2ИВАНОВ

       .  .  .


       ХОТИТЕ ПОСМОТРЕТЬ РЕЗУЛЬТАТЫ РАБОТЫ? (ДА/НЕТ)
       ДА

      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       (СТУДЕНТ*1
          (ГРУППА ($VALUE (A-14-84)))
          (ФАМИЛИЯ ($VALUE (ИВАНОВ)))
       )
      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

     Примечания:
         Для реализации функции ДИАЛОГ использовать процедуру
       FINSTANTIATE (см. описание FRL).
         Функция ДИАЛОГ должна заполнять слоты:
           ФАМИЛИЯ, ГРУППА, ИМЯ, ОТЧЕСТЫВО, ГОД-РОЖДЕНИЯ
         Для организации диалога использовать функцию REPLY.

.
                            - 3 -
                          2Задание по FRL N3

     Реализовать функцию  АНАЛИЗ (<список слов предложения>)
     Семантика: Функция АНАЛИЗ позволяет распознать синтаксически правильные
                предложения русского языка.(под синтаксически правильными
                предложениями будем понимать те, в которых правильный
                порядок слов и все слова предложения имеются в словаре)
                Если предложение синтаксически верно - то результат Т,
                иначе - NIL

     Проверить работу функции АНАЛИЗ на примере 3-5 предложений.

     Пример:
       (АНАЛИЗ '(СТОЛ БОЛЬШОЙ СИНИЙ)) => NIL
       (АНАЛИЗ '(БОЛЬШОЙ СИНИЙ СТОЛ)) => T

     Пример словаря:

       DEFRAME
         (СТОЛ
           (ЧАСТЬ-РЕЧИ ($VALUE (CУЩЕСТВИТЕЛЬНОЕ)))
         )

        . . .

     Пример грамматики:

       DEFRAME
         (*ГРАММАТИКА*
           (S1 ($VALUE ((ПРИЛАГАТЕЛЬНОЕ S2) (СУЩЕСТВИТЕЛЬНОЕ S3))))
           (S2 ($VALUE ((CУЩЕСТВИТЕЛЬНОЕ S3))))
         )

        . . .
.
                            - 4 -

                          2Задание по FRL N4

     Реализовать функцию:
      2(ЛАБИРИНТ <начальная вершина>)
     Семантика: Функция ЛАБИРИНТ моделирует путешествие по лабиринту
                в процессе диалога.

     Проверить работу функции ЛАБИРИНТ на примере модели лабиринта
     из 10 комнат.

     Пример:
       (ЛАБИРИНТ 'КОМ*1)
        2КОМНАТА1
        2ВЫБЕРИ НАПРАВЛЕНИЯ ДВИЖЕНИЯ (П,Л,B,H)
     Л
        2**** ТАКОГО ПУТИ НЕТ ****
     В
        2КОМНАТА2
        2ВЫБЕРИ НАПРАВЛЕНИЯ ДВИЖЕНИЯ (П,Л,B,H)
     Л
        2КОМНАТА3
        2*** ВЫ ВЫШЛИ ИЗ ЛАБИРИНТА ***


       DEFRAME
         (KOM*1
            (TEКСТ ($VALUE ("КОМНАТА1")))
            (ВПЕРЕД ($VALUE (КОМ*2)))
            (ВПРАВО ($VALUE (КОМ*5)))
         )

         . . .

       DEFRAME
         (KOM*3
            (TEКСТ ($VALUE ("КОМНАТА3 *** ВЫ ВЫШЛИ ИЗ ЛАБИРИНТА ***")))
         )


    Примечание:
    Для организации диалога можно использовать функцию REPLY,
либо REPLY*,SELECTOR*.
.
                            - 5 -

                          2Задание по FRL N5

 Реализовать функцию:
   2(OТВЕТ <список слов на естественном языке>)
    Семантика: Функция ОТВЕТ формирует ответ на вопрос и  возвра-
щает его в качестве результата.

     Проверить работу функции ОТВЕТ на примере 5-6 вопросов

    Примечание:
    Для представления знаний об ответе следует использовать  спе-
циальный фрейм,  в котором ответы на вопрос хранятся в аспектах с
именем $VALUE,  а список ключевых слов (для идентификации ответа)
- в аспектах с именем $DEFAULT.


     Пример:
       (ОТВЕТ '(КАК ТЕБЯ ЗОВУТ ?)) => ЖОРА
       (ОТВЕТ '(СКОЛЬКО ТЕБЕ ЛЕТ ?)) => 20
       (ОТВЕТ '(ТЫ ЛЮБИШЬ ДЕТЕКТИВЫ ?)) => НЕ ЗНАЮ


      DEFRAME
        (*OБ'ЕКТ*
           (ВОЗРАСТ ($VALUE (20))
                    ($DEFAULT (CKOЛЬКО) (ЛЕТ) (ВОЗРАСТ))
           )
           (ИМЯ     ($VALUE (ЖОРА))
                    ($DEFAULT (КАК) (ЗОВУТ) (ИМЯ))
           )
        )


.
                            - 6 -
                          2Задание по FRL N6

     Реализовать функцию управления роботом PUT-ON, позволяющую
"переставлять" предметы с места на место. Предметную область опи-
сать сетью фреймов (с использованием присоединенных процедур в
аспекте $IF-ADDED).

     Пример:  2(PUT-ON A B)

     Робот "берет" предмет А и ставит его на В. Результат - T,
если робот справился с операцией. Иначе, NIL.

     Отрицательный результат возможен в следующих случаях:

     1. "предмет" отсутствует в базе знаний
     2. "предмет" находится не на поверхности (т.е. на нем стоит
         еще один предмет).

      2Примечание:
     1. После перестановки предметов база знаний модифицируется.
     2. Если 2-ой аргумент функции PUT-ON опущен, то это означа-
        ет, что предмет ставится на пол.
     3. При реализации полезно использовать аспекты $VALUE и
        $IF-ADDED

    (DEFRAME *PROC*
       (НАД
            ($IF-ADDED . . .)
            ($IF-REMOVED . . .))
       (ПОД
            ($IF-ADDED . . .)
            ($IF-REMOVED . . .))      )


    (DEFRAME A                      (DEFRAME C
       (AKO ($VALUE (*PROC*)))         (AKO ($VALUE (*PROC*)))
       (НАД ($VALUE ()))               (НАД ($VALUE (A)))
       (ПОД ($VALUE (C)))              (ПОД ($VALUE ()))
    )                               )

    (DEFRAME B
       (AKO ($VALUE (*PROC*)))
       (НАД ($VALUE ()))
       (ПОД ($VALUE ()))
    )

    (PUT-ON 'C 'B) => NIL
    (PUT-ON 'A 'B) => T

    (DEFRAME A                     (DEFRAME C
       (AKO ($VALUE (*PROC*)))        (AKO ($VALUE (*PROC*)))
       (НАД ($VALUE ()))              (НАД ($VALUE ()))
       (ПОД ($VALUE (B)))             (ПОД ($VALUE ()))
    )                              )

    (DEFRAME B
       (AKO ($VALUE (*PROC*)))
       (НАД ($VALUE (A)))
       (ПОД ($VALUE ()))
    )
.
                            - 7 -
                          2Задание по FRL N7


     Реализовать функцию MOVE перемещения числовых данных между
фреймами на примере обмена марками между ВИТЕЙ, ПЕТЕЙ и КОЛЕЙ.

Пример:
       (FPRINT)
       (ВИТЯ
               .  .  .

          (ЧИСЛО-МАРОК ($VALUE (10))
               .  .  .
       )
       (ПЕТЯ
               .  .  .

          (ЧИСЛО-МАРОК ($VALUE (5))
               .  .  .
          )
       )
       (КОЛЯ
               .  .  .

          (ЧИСЛО-МАРОК ($VALUE (0))
               .  .  .
          )
               .  .  .

       )

   (MOVE 'ВИТЯ  'ПЕТЯ  5)  => 5
   (MOVE 'ВИТЯ  'КОЛЯ  10) => 5 (у Вити только 5 марок)
   (MOVE 'ВИТЯ  'ПЕТЯ  10) => NIL (у Вити нет больше марок)
   (MOVE 'ПЕТЯ  'ВИТЯ  3)  => 3

       (FPRINT)
       (ВИТЯ
              .  .  .

          (ЧИСЛО-МАРОК  ($VALUE (3))
              .  .  .
          )
        )

        (ПЕТЯ
              .  .  .

          (ЧИСЛО-МАРОК  ($VALUE (7))
              .  .  .
          )
        )

        (КОЛЯ
              .  .  .

          (ЧИСЛО-МАРОК  ($VALUE (5))
              .  .  .
          )

        )
.
                            - 8 -

                      Задание по FRL N8

     Автоматизировать подсчет среднего бала успеваемости учащего-
ся с использованием механизма присоединенных процедур.

Пример:
       (ВАСЯ
          (МАТЕМАТИКА ($VALUE (5)(3)(5)(3))
                  .  .  .
          )
          (ФИЗИКА     ($VALUE (4))
                  .  .  .
          )
          (ЧИСЛО-ОЦЕНОК ($VALUE (5))
                  .  .  .
          )
          (СРЕДНИЙ-БАЛЛ ($VALUE (4))
                  .  .  .
          )
      )

      FPUT (ВАСЯ  ФИЗИКА  $VALUE  2 )

     FPRINT ((ВАСЯ))
       (ВАСЯ
                .  .  .

          (ФИЗИКА ($VALUE (4)(2))
                .  .  .
          )
          (ЧИСЛО-ОЦЕНОК ($VALUE (6))
                .  .  .
          )
          (СРЕДНИЙ-БАЛЛ ($VALUE (3.6))
                .  .  .
          )
       )


.
                            - 9 -

                        Задание по FRL N9

     Реализовать функцию сумма, работающую на сети фреймов, поз-
воляющую обрабатывать следующую ситуацию:

Пример:
       (A
          (СУММА ($VALUE (10))
              .  .  .
          )
          (ДОЛГИ ($VALUE (B)(C)))
          (B ($VALUE (20))
              .  .  .
          )
          (C ($VALUE (5))
              .  .  .
          )
       )

       (C (СУММА ($VALUE ((5)) ... ))
       (B (СУММА ($VALUE ((5)) ... ))

        СУММА (A 35) => T

        FPRINT (  )
        (A
          (СУММА ($VALUE (15))
              .  .  .
          )
          (ДОЛГИ ($VALUE (B)(C)))
          (B ($VALUE (0))
              .  .  .
          )
          (C ($VALUE (0))
              .  .  .
          )
       )

       (B (СУММА ($VALUE ((25)) ... ))
       (C (СУММА ($VALUE ((20)) ... ))

.
                            - 10 -

                      Задание по FRL N10

     Реализовать диалоговую функцию:
      2(ПОИСК)
    Семантика: Функция ПОИСК работает с сетью фреймов,  реализую-
щих фрагмент семантической сети,  описывающей мир  животных  (для
примера взять сеть с 8-10 вершинами).  ПОИСК задает вопросы, поз-
воляющие идентифицировать об'екты  в  семантической  сети  по  их
признакам (слотам).

     2Примечание:
    Для представления знаний следует использовать механизм насле-
дования по АКО-иерархии.
    Для организации диалога использовать функцию REPLY,REPLY*

     Пример:
        2(ПОИСК)
       СИСТЕМА: ТЕМПЕРАТУРА ТЕЛА ПОСТОЯННАЯ? (ДА/НЕТ)
       ДА

       . . .

       СИСТЕМА: КРЫЛЬЯ ИМЕЮТСЯ? (ДА/НЕТ)
       ДА

       . . .

       ЭТО - ГУСЬ
       *КОНЕЦ*


       DEFRAME
          (*КОРН.ВЕРШ*
             (INSTANCE ($VALUE (ПТИЦЫ) (РЫБЫ) ...))
          )


       DEFRAME
          (ПТИЦЫ
             (АКО ($VALUE (*КОРН.ВЕРШ*)))
             (INSTANCE ($VALUE (ВОДОПЛАВАЮЩИЕ) ...))
             (КРЫЛЬЯ($VALUE (ECTЬ))
             (ЧЕШУЯ ($VALUE (НЕТ)))
             (ТЕМП-ТЕЛА ($VALUE (40)))
             (ПОСТОЯН-ТЕМПЕР-ТЕЛА ($VALUE (ДА)))
          )

       DEFRAME
          (ВОДОПЛАВАЮЩИЕ
             (АКО ($VALUE (ПТИЦЫ)))
             (INSTANCE ($VALUE (УТКА)(ГУСЬ) ...))
             . . .
          )

       DEFRAME
          (ГУСЬ
             (АКО ($VALUE (ВОДОПЛАВАЮЩИЕ)))
             . . .
          )
.
                            - 11 -
                      Задание по FRL N11

     Пусть конечный автомат задается множеством фреймов F={F1,
F2, ... FN}, причем каждый Fi имеет вид:
   <Fi>::= (Fi
              (OUTPUT ($value (<входное сообщение>)))
              (<входное сообщениеi1> ($value (Fi1)))
                    . . . . . . . . . . . . .
              (<входное сообщениеik> ($value (Fik)))
              (TERMINATE ($value (<конечная вершина> ...)
           )
   <входное сообщение>::= <атом>
   <выходное сообщение>::=<атом>

     Написать функцию  обработки входного списка с использова-
нием конечного автомата:

     (OBRAB <начальный фрейм> <входной список>)
                          ==> <выходной список>
.
                            - 12 -
                      Задание по FRL N12

     Реализовать базу знаний для родственных отношений. Должны
отслеживаться отношения:  отец,  мать, сын, дочь, бабушка, де-
душка, муж,  жена, внук, внучка, теща, свекровь. Предусмотреть
обработку не только случаев появления новых связей,  но и уда-
ления имеющихся.
.
                            - 13 -
                      Задание по FRL N13
     Реализовать небольшую  поисковую систему по вариантам об-
мена жилой площадью. На выходе такой системы - описание требу-
емого варианта   обмена,   на   выходе   -  список  подходящих
вариантов. Например:

Вход:  (Вариант-обмена
        (число комнат ($value (3)))
        (общая-площадь ($require (> :value 35)))
        (число-комнат ($value (3)))
        (расположение ($value (центр) or (ст.м.Полежаевская)))
        (этаж ($require (> :value 1) (neq :value 'последний)))
        ...........
       )

Выход: (Вариант*3 Вариант*5 ...)

     Предусмотреть базу вариантов на 10-15 фреймов.

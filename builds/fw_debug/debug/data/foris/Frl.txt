(deframe MFW)
(deframe MFS)


; функция-меню
(defun menu ()
  (setq choice 1)
  (loop ((= choice 14) (terpri 1) "Bye")
        (terpri 1) (princ "-----------") (terpri 1)
        (princ "1= Add student") (terpri 1)
        (princ "2= Change student") (terpri 1)
        (princ "3= Delete student") (terpri 1)
        (princ "4= View student") (terpri 1)

        (princ "5= Middle student ball") (terpri 1)
        (princ "6= Rating") (terpri 1)
;        (princ "8= Shop item query") (terpri 1)
;        (princ "9= Warehouse unit query") (terpri 1)
;        (princ "10= Shop query") (terpri 1)
;        (princ "11= Path query") (terpri 1)
;        (princ "13= View warehouse units") (terpri 1)
;        (princ "14= Exit") (terpri 1)
        (princ "Please input number: ")
        (setq choice (read))
        (cond ((eq choice 1) (menu_1))
              ((eq choice 2) (menu_2))
              ((eq choice 3) (menu_3))
              ((eq choice 4) (menu_4))
              ((eq choice 5) (menu_5))
              ((eq choice 6) (menu_6))
              ((eq choice 7) (menu_7))
              ((eq choice 8) (menu_8))
              ((eq choice 9) (menu_9))
              ((eq choice 10) (menu_10))
              ((eq choice 11) (menu_11))
              ((eq choice 12) (menu_12))
              ((eq choice 13) (menu_13))
        )
  )
)

; Add Student
(defun menu_1 ()
  (princ "Please, input new student name: ")
  (setq NewName (read))
  (addstudent NewName)
)
; Проверить есть ли имя студент с именем Nam в списке NList
(defun find_Name (Nam NList)
  (cond ((null NList) NIL)
        ((eq Nam (car NList)) T)
        (T (find_Name Nam (cdr NList)))
  )
)


; Добавить студента
(defun addstudent (Name)
  (setq Check (find_Name Name (append (fget MFS AKO) (fget MFS AKO))))
  (cond ((eq Check NIL) 
           (deframe Name)
           (fput Name type $VALUE 0)
           (princ "Please, input first ball: ") (setq ball1 (read))
           (princ "Please, input second ball: ") (setq ball2 (read))
           (princ "Please, input thirth ball: ") (setq ball3 (read))
           (princ "Please, input fourth ball: ") (setq ball4 (read))
           (fput Name firstball ball1)
           (fput Name secondball ball2) 
           (fput Name thirthball ball3)
           (fput Name fourthball ball4) 
           (finstantiate Name MFS)
           (princ "OK"))
        (T (princ "This student already exists.Please, choose another name."))
  )
)



; Просмотр студента
(defun menu_4 ()
  (princ "Input student name: ")
  (setq Name (read))
  (setq CheckS (find_Name Name (fget MFS AKO)))
  (cond ((not (eq CheckS T))
           (terpri 1)
           (princ "Student -") (write Name)
           (princ "- doesn't exist."))
        (T (princ "Name")(spaces 10)
           (princ "Firstball:  Secondball:  Trithball:  Fouthball:") (terpri 1)
           (write Name)
           (setq Pos (- 15 (length Name)))(spaces pos)
           (write (caadr (fquery Name firstball)))(spaces 11)
           (write (caadr (fquery Name Secondball)))(spaces 12)
           (write (caadr (fquery Name Thirthball)))(spaces 11)
           (write (caadr (fquery Name Fourthball)))
           (terpri 1)
           (princ "Type any symbol to continue... ")
           (read))
  )
)  

;Изменить оценки студента
(defun menu_2 ()
  (princ "Please, input student name: ") (setq Name (read))
  (princ "Please, input firstball: ") (setq b1 (read))
  (princ "Please, input secondball: ") (setq b2 (read))
  (princ "Please, input thitthball: ") (setq b3 (read))
  (princ "Please, input fourthball: ") (setq b4 (read))
  (setstudentball Name b1 b2 b3 b4)
)

;Изменить оценки студента
(defun setstudentball (Name b1 b2 b3 b4)
  (setq Check (find_Name Name (fget MFS AKO)))
  (cond ((eq Check T)
          (fdelete Name firstball)
          (fput Name firstball b1)
          (fdelete Name Secondball)
          (fput Name Secondball b2)
          (fdelete Name Thirthball)
          (fput Name Thirthball b3)
          (fdelete Name Fourthball)
          (fput Name Fourthball b4)
          (princ "OK"))
         ( T (princ "This student doesn't exist."))
  )
)

; Удалить сообщение о студенте
(defun menu_3 ()
  (princ "Please, input student name: ")(setq Name (read))
  (deleteStudent Name)
)


;(defun deleteStudent (Name)
;  (setq Check (find_Name Name (fget MFS AKO)))
;  (cond ((eq Check T)
;          (princ (fdestroy (fquery Name)))
;          (princ "OK"))
;        (T (princ "This shop/warehouse doesn't exist."))
;  )
;)

(defun menu_6 ()
  (princ "Please, input new student name: ")
  (setq Name (read))
  (setq Check (find_Name Name (fget MFS AKO)))
  (cond ((eq Check T)
         (setq b1 (caadr (fquery Name firstball)))
         (setq b2 (caadr (fquery Name Secondball)))
         (setq b3 (caadr (fquery Name Thirthball)))
         (setq b4 (caadr (fquery Name Fourthball)))
         (setq rating (/ (+ b1 b2 b3 b4) 4))
         (princ "Student ")(write a)(princ " has rating: ")
         (setq WsList (fgetn MFS ako $VALUE ))
         (setq nlist nil)
         (conslist wslist nlist)
         (write nlist)
;         (setq rating1 0)
;         (middle nlist rating1)
;         (write rating1)

         (write wslist)
         (fprint (list mfs))
         (write rating))
         ( T (princ "This student doesn't exist."))
 )
)

;(defun menu_6 ()
;  (princ "Please, input new student name: ")
;  (setq Number (read))
;  (setq List (fgetn a firstball))
;  (write List)
;)

; Удалить дугу
(defun deletewayrec (WayList FName SName)
  (cond ((null WayList))
        ((eq (caar WayList) SName) (deletewayrec (cdr WayList) FName SName))
        (T (addway FName (caar WayList) (cdar WayList))
           (deletewayrec (cdr WayList) FName SName))
  )
)
(defun deleteway (FirName SecName)
  (setq CheckF (find_Name FirName (append (fget MFW AKO) (fget MFS AKO))))
  (setq CheckS (find_Name SecName (append (fget MFW AKO) (fget MFS AKO))))
  (cond ((not (eq CheckF T))
           (princ "This shop/warehouse -") (write FirName)
           (princ "- doesn't exist."))
        ((not (eq CheckS T))
           (princ "This shop/warehouse -") (write SecName)
           (princ "- doesn't exist."))
        (T (setq WayList (fget FirName way $VALUE))
           (fdelete FirName way)
           (deletewayrec WayList FirName SecName)
           (princ "OK"))
  )
)

; Удалить магазин или склад
(defun deleteframerec (WSLst WSNm)
  (cond ((null WSLst))
        ((eq (caaar WSLst) WSNm)
           (deleteway (car (cdadar WSLst)) WSNm)
           (deleteframerec (cdr WSLst) WSNm))
        (T (deleteframerec (cdr WSLst) WSNm))
  )
)
(defun deleteframe (WSName)
  (setq CheckF (find_Name WSName (fget MFS AKO)))
  (cond ( (eq CheckF T)
           (setq WSList (append (fget MFS way $VALUE '(c)) (fget MFW way $VALUE '(c))))
           (deleteframerec WSList WSName)
           (freset (list WSName))
           (princ "OK"))
        (T (princ "This shop/warehouse doesn't exist."))
  )
)

; Удалить магазин/склад
(defun menu_3 ()
  (princ "Please, input shop/warehouse name: ")
  (deleteframe (read))
)

(defun Middle (wslist midball)
 (setq n 0)
 (setq mid 0)
 (middlerec wslist n mid)
 (setq midball (/ mid n))
)

(defun middlerec (nlist n mid)
 (cond 
     ((null (cdr nlist)) (setq n (+ n 1))
                        (setq mid (+ mid (car nlist)))
     )
     (T (setq n (+ n 1))
        (setq mid (+ mid (car nlist)))
        (middlerec (cdr nlist) n mid)
     )
 )
)

(defun conslist (wslist nlist newlist)
 (cond ((null (cdr wslist)) (setq l (caadr (fquery (car wslist) firstball)))
                            (setq nlist (append nlist (list l)))
                            (write nlist) 
       )
       (T (setq l (caadr (fquery (car wslist) firstball)))
          (setq nlist (append nlist (list l)))
          (write nlist) 
          (conslist (cdr wslist) nlist)       
       )
 )
)
(DEFUN DRIVER2 (**driver-buf**)
    (defun read-char (**result**)
        (**clear** |S:\inacc.lsp|)
        (**wait** |S:\inacc.lsp| T)
        (setq  **result** (**read_from_file** |S:\in.lsp| **read-char** nil))
        ;(princ |>> |)
        ;(**print** **result**)
        **result**
    )
    (defun read (**result**)
        (**clear** |S:\inacc.lsp|)
        (**wait** |S:\inacc.lsp| T)
        (setq  **result** (**read_from_file** |S:\in.lsp| **read** nil))
        ;(princ |>> |)
        ;(**print** **result**)
        **result**
    )
    (defun print (**x** **result**)
        (**wait** |S:\oacc.lsp| T)
        (setq  **result** (**out_to_file** |S:\out.lsp| **print** **x**))
        (**clear** |S:\oacc.lsp|)
        (**delay** 51)
        **result**
    )
    (defun princ (**x** **result**)
        (**wait** |S:\oacc.lsp| T)
        (setq  **result** (**out_to_file** |S:\out.lsp| **princ** **x**))
        (**clear** |S:\oacc.lsp|)
        (**delay** 51)
        **result**
    )
    (defun write-string (**x** **result**)
        (**wait** |S:\oacc.lsp| T)
        (setq  **result** (**out_to_file** |S:\out.lsp| **write-string** **x**))
        (**clear** |S:\oacc.lsp|)
        (**delay** 51)
        **result**
    )
    (defun TERPRI (**x** **result**)
        (**wait** |S:\oacc.lsp| T)
        (setq  **result** (**out_to_file** |S:\out.lsp| **TERPRI** **x**))
        (**clear** |S:\oacc.lsp|)
        (**delay** 51)
        **result**
    )
    (CATCH 'RETURN 
        (LOOP 
            (CATCH nil
                (CATCH 'DRIVER
                    ;(PRINC "> ")
                    (setq + |+|)
                    (setq ++ |++|)
                    (setq +++ |+++|)
                    (setq **driver-buf** (EVAL (READ)))
                    (PRINT  **driver-buf**)
                )
            )
        )
    )
)

(movd print **print**)
(movd princ **princ**)
(movd write-string **write-string**)
(movd TERPRI **TERPRI**)
(movd read **read**)
(movd read-char **read-char**)

(defun **func_under_file** (**rds** **file** **func** **arg** **result** **buf**)
    (cond 
        ((eval **rds**) (setq **buf** rds) (rds **file**))
        (T (setq **buf** wrs) (wrs **file**))
    )
    (setq **result** (funcall **func** **arg**))
    ;(if (eval **rds**) (rds  **buf*) (wrs  **buf*))
    (if (eval **rds**) (rds) (wrs))
    **result**
)

(defun **read_from_file** (**file** **func** **arg**)
    ;(**print** (list read from **file** (list **func** **arg**)))
    (**func_under_file** T **file** **func** **arg**)
)

(defun **out_to_file** (**file** **func** **arg**)
    ;(**print** (list write to **file** (list **func** **arg**)))
    (**func_under_file** nil **file** **func** **arg**)
)

(defun **clear** (**file**)
    ;(**print** (list clear **file**))
    (**out_to_file** **file** **print** 0)
)

(defun **delay** (**time** **buf**)
    (setq **buf** (+ (time) (CEILING (/ **time** 10))))
    (LOOP
        ((>= (time) **buf**) nil)
    )
)

(defun **wait** (**file** **for_delete** **buf**)
    (LOOP
        ;(**print** (list wait for **file** **for_delete**))
        (setq **buf** (rds **file**))
        ((and (not **buf**) **for_delete**) nil)
        ((and **buf** (not **for_delete**)) (rds))
        (if (eval **buf**) (rds))
        (**delay** 50)
    )
)

(defun break (nlambda (**f** **msg** **buf**) 
        (write-string "break ")
        (princ (eval **msg**))
        (princ " ")
        (princ **f**)
        (TERPRI 1)
        ;...
        ;(READ-CHAR)
        (loop
            (write-string |Continue, Break, Abort, Top-level, Restart, System? |)
            (setq **buf** (READ-CHAR))
            ((or (eq **buf** \C) (eq **buf** \c)) (return **f**))
            ((or (eq **buf** \B) (eq **buf** \b)) (setq break **f**) (driver2))
            ((or (eq **buf** \A) (eq **buf** \a)) (return **f**))
            ((or (eq **buf** \T) (eq **buf** \t)) (throw |driver|))
            ((or (eq **buf** \S) (eq **buf** \s)) (system))
            ((or (eq **buf** \R) (eq **buf** \r)) (restart))
        )
    )
)


(DRIVER2)